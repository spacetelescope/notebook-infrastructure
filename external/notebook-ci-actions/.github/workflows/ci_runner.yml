on:
  workflow_call:
      secrets:
        CASJOBS_USERID:
          description: 'CASJOBS user ID'
          required: false
        CASJOBS_PW:
          description: 'CASJOBS password'
          required: false
env:
  CASJOBS_PW: ${{ secrets.CASJOBS_PW }}
  CASJOBS_USERID: ${{ secrets.CASJOBS_USERID }}
  
jobs:
  gather-notebooks:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v4
    ## routine to gather only the changed notebook files and supply them to the matrix
    - name: changed-files
      id: get-changed-files
      uses: tj-actions/changed-files@v45.0.1
      with:
        separator: ","
        files: |
          **/*.ipynb
    ## convert the list of files to an array and push them into the matrix as a json object      
    - name: set-matrix
      id: set-matrix
      run: |
        IFS=',' read -r -a array <<< "${{steps.get-changed-files.outputs.all_changed_files}}"
        echo "{$array}"
        echo "matrix=$(jq --compact-output --null-input '$ARGS.positional' --args -- "${array[@]}")" >> $GITHUB_OUTPUT
  notebook-execution:
    needs: gather-notebooks
    environment: ci_env
    runs-on: ubuntu-latest
    strategy:
        fail-fast: false
        matrix:
            notebooks: ${{ fromJson(needs.gather-notebooks.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.8.12
        uses: actions/setup-python@v5 ## needed for caching
        with:
          python-version: 3.8.12
          cache: 'pip'
      - name: Add conda to system path
        run: |
          # $CONDA is an environment variable pointing to the root of the miniconda directory
          echo $CONDA/bin >> $GITHUB_PATH
      - name: Install dependencies
        run: |
          ## Install the local requirements file
          echo DEBUG ---
          pwd ## print working directory
          echo "Path to req's: $(dirname ${{ matrix.notebooks }})/requirements.txt"
          ls $(dirname ${{ matrix.notebooks }})
          echo ---
          if [ -f $(dirname "${{ matrix.notebooks }}")/pre-requirements.sh ]; then
            chmod +x $(dirname "${{ matrix.notebooks }}")/pre-requirements.sh
            ./$(dirname "${{ matrix.notebooks }}")/pre-requirements.sh
          fi
          if [ -f $(dirname "${{ matrix.notebooks }}")/pre-requirements.txt ]; then
            pip install -r "${{ matrix.notebooks }}")/pre-requirements.txt
          fi
          if [ -f pre-requirements.txt ]; then
            pip install -r pre-requirements.txt
            echo Found Pre-Reqs
          fi
          pip install -r $(dirname ${{ matrix.notebooks }})/requirements.txt
          pip install pytest
          pip install nbval
          pip install nbconvert
          pip install bandit
      - name: Security testing with Bandit
        run: | 
          bandit "${{ matrix.notebooks }}"
      - name: Execute notebooks
        run: |
          export CASJOBS_PW="$CI_CASJOBS_PW"
          export CASJOBS_USERID="$CI_CASJOBS_USERID"
          jupyter nbconvert --template classic --to html --execute "${{ matrix.notebooks }}"
      - name: Validate notebooks 
        run: |
         pytest --nbval "${{ matrix.notebooks }}" 
